(function() {var implementors = {};
implementors["gba2k"] = [{"text":"impl&lt;T&gt; Unpin for <a class=\"struct\" href=\"gba2k/interrupts/struct.GbaCell.html\" title=\"struct gba2k::interrupts::GbaCell\">GbaCell</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":["gba2k::interrupts::gba_cell::GbaCell"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/interrupts/struct.IrqBits.html\" title=\"struct gba2k::interrupts::IrqBits\">IrqBits</a>","synthetic":true,"types":["gba2k::interrupts::IrqBits"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/keys/struct.KeysLowActive.html\" title=\"struct gba2k::keys::KeysLowActive\">KeysLowActive</a>","synthetic":true,"types":["gba2k::keys::KeysLowActive"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/keys/struct.Keys.html\" title=\"struct gba2k::keys::Keys\">Keys</a>","synthetic":true,"types":["gba2k::keys::Keys"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/video/color/struct.Color.html\" title=\"struct gba2k::video::color::Color\">Color</a>","synthetic":true,"types":["gba2k::video::color::Color"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/video/display_control/struct.DisplayControl.html\" title=\"struct gba2k::video::display_control::DisplayControl\">DisplayControl</a>","synthetic":true,"types":["gba2k::video::display_control::DisplayControl"]},{"text":"impl Unpin for <a class=\"enum\" href=\"gba2k/video/display_control/enum.DisplayMode.html\" title=\"enum gba2k::video::display_control::DisplayMode\">DisplayMode</a>","synthetic":true,"types":["gba2k::video::display_control::DisplayMode"]},{"text":"impl Unpin for <a class=\"struct\" href=\"gba2k/video/display_status/struct.DisplayStatus.html\" title=\"struct gba2k::video::display_status::DisplayStatus\">DisplayStatus</a>","synthetic":true,"types":["gba2k::video::display_status::DisplayStatus"]}];
implementors["voladdress"] = [{"text":"impl&lt;T, R, W&gt; Unpin for <a class=\"struct\" href=\"voladdress/struct.VolAddress.html\" title=\"struct voladdress::VolAddress\">VolAddress</a>&lt;T, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":["voladdress::voladdress_::VolAddress"]},{"text":"impl&lt;T, R, W, const C:&nbsp;usize&gt; Unpin for <a class=\"struct\" href=\"voladdress/struct.VolBlock.html\" title=\"struct voladdress::VolBlock\">VolBlock</a>&lt;T, R, W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":["voladdress::volblock::VolBlock"]},{"text":"impl&lt;T, R, W&gt; Unpin for <a class=\"struct\" href=\"voladdress/struct.VolBlockIter.html\" title=\"struct voladdress::VolBlockIter\">VolBlockIter</a>&lt;T, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":["voladdress::volblock::VolBlockIter"]},{"text":"impl&lt;T, R, W, const C:&nbsp;usize, const S:&nbsp;usize&gt; Unpin for <a class=\"struct\" href=\"voladdress/struct.VolSeries.html\" title=\"struct voladdress::VolSeries\">VolSeries</a>&lt;T, R, W, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":["voladdress::volseries::VolSeries"]},{"text":"impl&lt;T, R, W, const S:&nbsp;usize&gt; Unpin for <a class=\"struct\" href=\"voladdress/struct.VolSeriesIter.html\" title=\"struct voladdress::VolSeriesIter\">VolSeriesIter</a>&lt;T, R, W, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":["voladdress::volseries::VolSeriesIter"]},{"text":"impl Unpin for <a class=\"struct\" href=\"voladdress/struct.Safe.html\" title=\"struct voladdress::Safe\">Safe</a>","synthetic":true,"types":["voladdress::Safe"]},{"text":"impl Unpin for <a class=\"struct\" href=\"voladdress/struct.Unsafe.html\" title=\"struct voladdress::Unsafe\">Unsafe</a>","synthetic":true,"types":["voladdress::Unsafe"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()